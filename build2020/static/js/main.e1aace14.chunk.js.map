{"version":3,"sources":["assets/ph.jpg","styles/common.js","styles/theme.js","components/Landing/Landing.styles.js","components/Landing/Landing.jsx","styles/animations.js","components/Experience/Experience.styles.js","components/Experience/Experience.jsx","components/Skills/Skills.styles.js","components/Skills/Skills.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","SectionWrapper","styled","section","props","alignItems","bgColor","ArrowDown","div","text","Portrait","img","Landing","className","src","Photo","alt","side","icon","faLongArrowAltDown","keyframes","ExperienceWrapper","ExperienceList","ExperienceItem","extended","ExperienceHeading","h2","ExperienceContent","EMPLOYMENT_DATA","title","icons","faReact","position","time","content","link","faNodeJs","faVuejs","faGraduationCap","faFileCode","Experience","useState","currentItem","setCurrentItem","employmentList","map","item","index","key","onClick","undefined","toggleItem","ReactHtmlParser","href","target","rel","faExternalLinkAlt","SkillsWrapper","SkillsTable","sub","SkillsRow","SkillsSection","SkillsContent","Skills","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e1aace14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ph.e5fb7b51.jpg\";","import styled from 'styled-components';\n\nimport { textColorMain } from './theme';\n\nexport const SectionWrapper = styled.section`\n  position: relative;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: ${props => props.alignItems || 'flex-start'};\n  box-sizing: border-box;\n  padding: 0 2em 6em;\n  background-color: ${props => props.bgColor};\n  color: ${textColorMain};\n`;\n\nexport const ArrowDown = styled.div`\n  position: absolute;\n  font-size: 1.5em;\n  color: ${textColorMain};\n  left: calc(50vw - .5em);\n  bottom: 1em;\n\n  &::after {\n    margin-top: -2em;\n    margin-left: -5.25em;\n    display: inline-block;\n    width: 10em;\n    position: absolute;\n    content: '${props => props.text}';\n    font-size: 0.6em;\n  }\n`;","/*export const bgColor1 = /*'#411f26' '#52242d';\nexport const bgColor2 = '#d27230';\nexport const bgColor3 = '#dbb3a4';\nexport const bgColor4 = '#333c54';\nexport const textColorMain = '#f6f6f6';\nexport const textColorSub =''*/\n\n\n/*export const bgColor1 = '#dde0b6';\nexport const bgColor2 = '#b7c06f';\nexport const bgColor3 = '#f3e6be';\nexport const bgColor4 = '#f5a883';\nexport const textColorMain = '#9b3c2e';\nexport const textColorSub = '#f6f6f6';*/\n\n\n/*export const bgColor1 = '#c5d7d9';\nexport const bgColor2 = '#7dbbb9';\nexport const bgColor3 = '#d8d3d0';\nexport const bgColor4 = '#dcdbe1';\nexport const textColorSub =''\nexport const textColorMain = '#2a5d68';*/\n\n\nexport const bgColor1 = '#d3e0ce';\nexport const bgColor2 = '#9cb8a0';\nexport const bgColor3 = '#e7acaa';\nexport const bgColor4 = '#e2b995';\nexport const textColorSub ='#eae9e4'\nexport const textColorMain = '#445d48';\n","import styled from 'styled-components';\n\nexport const Portrait = styled.img`\n  width: 40%;\n  max-width: 170px;\n  border-radius: 50%;\n  margin: 2em;\n  border: 4px double;\n  filter: brightness(1.1) contrast(1.1);\n`;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faLongArrowAltDown\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { SectionWrapper, ArrowDown } from 'styles/common';\nimport { bgColor1 } from 'styles/theme';\n\nimport Photo from 'assets/ph.jpg';\n\nimport { Portrait } from './Landing.styles';\n\nconst Landing = () => {\n  return (\n    <SectionWrapper className=\"landing\" bgColor={bgColor1} alignItems='center'>\n      <h1>hello there (:</h1>\n      <Portrait src={Photo} alt=\"My photo.\" />\n      <p>my name is <strong>Anastasiia</strong>,\n        <br />I am a <strong>JavaScript Developer</strong> from planet Earth \n        <br />with 4 years of relevant experience.</p>\n      <ArrowDown side='bottom' text='learn more'>\n        <FontAwesomeIcon icon={faLongArrowAltDown} />\n      </ArrowDown>\n    </SectionWrapper>\n  );\n}\n\nexport default Landing;\n","import { keyframes } from 'styled-components';\n\nexport const EASING = 'ease-out';\nexport const TRANSITION_TIME = '.2s';\n\nexport const slideLeft = keyframes`\n  0% {\n    transform: translateX(0);\n  }\n  100% {\n    transform: translateX(-100vw);\n  }\n`","import styled from 'styled-components';\n\nimport { SectionWrapper } from 'styles/common';\nimport { textColorMain } from 'styles/theme';\nimport { EASING, TRANSITION_TIME } from 'styles/animations';\n\nexport const ExperienceWrapper = styled(SectionWrapper)`\n  padding-top: 3em;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nexport const ExperienceList = styled.div`\n  margin: 4em auto;\n  max-width: 500px;\n  height: 100%;\n`;\n\nexport const ExperienceItem = styled.div`\n  margin-top: .5em;\n\n  &::after {\n    content: '.';\n    display: inline-block;\n    margin-left: -100%;\n  }\n\n  &:last-of-type::after {\n    content: none;\n  }\n\n  ${props => props.extended && `\n  ::after {\n    content: none;\n  }`}\n`;\n\nexport const ExperienceHeading = styled.h2`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: .3em 1em;\n  border-left: 1px solid;\n  cursor: pointer;\n\n  .company-name {\n    font-weight: bold;\n    font-style: italic;\n    margin-bottom: .25em;\n    text-decoration: underline;\n\n    small {\n      display: inline-block;\n      margin-left: .25em;\n      transform: scaleX(0);\n      transition: transform ${TRANSITION_TIME} ${EASING};\n\n      svg {\n        margin-left: .25em;\n      }\n    }\n  }\n\n  .employment-date {\n    font-size: .8em;\n  }\n\n  .more {\n    position: absolute;\n    display: inline-block;\n    margin-top: 3.75em;\n    font-size: .7em;\n    opacity: .75;\n    transform: scaleY(0);\n    transition: transform ${TRANSITION_TIME} ${EASING};\n  }\n\n  &:hover {\n    .company-name {\n      small {\n        transform: scaleX(1);\n      }\n    }\n    .more {\n      transform: scaleY(1);\n    }\n  }\n\n  ${props => props.extended && `.company-name {\n      small {\n        transform: scaleX(1);\n      }\n    }`\n  }\n`;\n\nexport const ExperienceContent = styled.div`\n  font-size: .9em;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: ${props => props.extended ? '.75em' : '0'} 1.1em;\n  overflow: hidden;\n  max-height: ${props => props.extended ? '9999px' : '0px'};\n\n  p {\n    text-align: left;\n    margin-bottom: .35em;\n    \n    em {\n      font-style: italic;\n      font-weight: bold;\n    }\n  }\n\n  a {\n    color: ${textColorMain};\n    font-style: italic;\n    font-weight: bold;\n    font-size: .85em;\n\n    small {\n      font-size: .85em;\n      line-height: .85em;\n      display: inline-block;\n      width: 0;\n      overflow: hidden;\n      transition: width ${TRANSITION_TIME} ${EASING};\n    }\n\n    &:hover {\n      small {\n        width: 1.25em;\n      }\n    }\n  }\n`;","import React, { useState } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faExternalLinkAlt,\n  faGraduationCap,\n  faFileCode,\n  faLongArrowAltDown,\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  faNodeJs,\n  faReact,\n  faVuejs,\n} from '@fortawesome/free-brands-svg-icons';\n\nimport { bgColor2 } from 'styles/theme';\nimport { ArrowDown } from 'styles/common';\n\nimport {\n  ExperienceWrapper,\n  ExperienceItem,\n  ExperienceHeading,\n  ExperienceContent,\n  ExperienceList,\n} from './Experience.styles';\n\nconst EMPLOYMENT_DATA = [{\n  title: 'Liki Mobile Solutions',\n  icons: [faReact],\n  position: 'JS Developer',\n  time: 'Dec. 2019 - now',\n  content: `<p><em>Responsibilities:</em> working on ongoing and new projects, architecting, coding, & maintaining.</p>\n  <p>I have been working mostly on a Frontend part here. Have been involved into several short-term projects, worked as a part of a team or independently.</p>\n  <p><em>Tech stack:</em> HTML5, SCSS, ES6+, React/Redux (Redux Saga), Material UI, React Storybook, GraphQL.</p>`,\n  link: 'https://likims.com/',\n}, {\n  title: 'TBWA/ Mobile',\n  icons: [faReact, faNodeJs],\n  position: 'JS Developer',\n  time: 'Jun. 2018 - Dec. 2019',\n  content: `<p><em>Responsibilities:</em> working on ongoing and new projects, R&D prototyping, architecting, coding, refactoring & maintaining.</p>\n  <p>Here I’ve started as Frontend developer, have put a lot of effort into web animations, developed web games. Later (a. June 2019) was promoted to Full Stack JS & switched to backend development.</p>\n  <p><em>Tech stack:</em> HTML5, SCSS, React/Redux, various animation & gaming libraries (such as GSAP, anime.js etc), ES6+; Node.js, Firebase.</p>`,\n  link: 'https://www.tbwa-x.com/',\n}, {\n  title: 'Inn4Science',\n  icons: [faVuejs],\n  time: 'Mar. 2017 - May. 2018',\n  content: `<p><em>Responsibilities:</em> working on ongoing projects, coding, refactoring & maintaining.</p>\n  <p>Here I’ve gained a lot of experience in direct communication with customers from all around the world, also was mentoring frontend trainees.</p>\n  <p><em>Tech stack:</em> HTML5, CSS3/SASS/SCSS, Angular.js, Vue.js/Vuex, JS, CoffeeScript, TypeScript, ES6, axios, various libraries & styling toolkits.</p>`,\n  link: 'https://www.inn4science.com/',\n}, {\n  title: 'SW Engineering studies',\n  icons: [faGraduationCap],\n  time: '2013 - 2017, Bachelor\\'s degree',\n  content: `<p>“Computer Science” faculty, dep. “Software Engineering and Management Information Technologies”.</p>\n  <p>\n  National Technical University “Kharkiv Polytechnical Institute”</p>`,\n}, {\n  title: 'Genie Solutions',\n  icons: [faFileCode],\n  time: 'Apr. 2013 – Sep. 2013',\n  content: `<p><em>Responsibilities:</em> creating/correcting html markup.</p>\n  <p><em>Tech stack:</em> HTML, CSS.</p>`\n}];\n\nconst Experience = () => {\n  const [currentItem, setCurrentItem] = useState();\n\n  const toggleItem = (index) => {\n    if (currentItem === index) {\n      setCurrentItem(undefined);\n    } else {\n      setCurrentItem(index);\n    }\n  }\n\n  const employmentList = EMPLOYMENT_DATA.map((item, index) => {\n    return (\n      <ExperienceItem key={`exp-${item.title}`} extended={currentItem === index}>\n        <ExperienceHeading onClick={() => toggleItem(index)} extended={currentItem === index}>\n          <span\n            className=\"company-name\"\n          >\n            {item.title}\n            <small>\n              {item.icons.map(icon => <FontAwesomeIcon icon={icon} />)}\n            </small>\n          </span>\n          <span className=\"employment-date\">\n            {item.time}\n          </span>\n          {currentItem === index || <span className='more'>read more...</span>}\n        </ExperienceHeading>\n        <ExperienceContent extended={currentItem === index}>\n          {ReactHtmlParser(item.content)}\n          { item.link && (<p>\n            <a \n              href={item.link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            ><small><FontAwesomeIcon icon={faExternalLinkAlt} /></small> Company webpage</a>\n          </p>)}\n        </ExperienceContent>\n      </ExperienceItem>\n    );\n  });\n\n  return (\n    <ExperienceWrapper className=\"experience\" bgColor={bgColor2} >\n      <h1>Experience</h1>\n      <ExperienceList>\n        {employmentList}\n      </ExperienceList>\n      <ArrowDown side='bottom' text='my skills'>\n        <FontAwesomeIcon icon={faLongArrowAltDown} />\n      </ArrowDown>\n    </ExperienceWrapper>\n  );\n}\n\nexport default Experience;\n","import styled from 'styled-components';\n\nimport { SectionWrapper } from 'styles/common';\n\nexport const SkillsWrapper = styled(SectionWrapper)`\n  padding-top: 3em;\n  justify-content: flex-start;\n  align-items: center;\n\n  h1 {\n    margin-bottom: 2em;\n  }\n`;\n\nexport const SkillsTable = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 600px;\n  flex-direction: column;\n  margin-bottom: 4em;\n  ${props => props.sub && `font-size: .8em`}\n`;\n\nexport const SkillsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  border-bottom: 1px solid;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n`;\n\nexport const SkillsSection = styled.div`\n  width: 30%;\n  border-right: 1px solid;\n  padding: 1.25em 1em;\n  text-align: right;\n  font-style: italic;\n  font-weight: bold;\n`;\n\nexport const SkillsContent = styled.div`\n  width: 70%;\n  padding: 1em;\n  text-align: left;\n\n  p {\n    margin-bottom: .35em;\n  }\n\n  small {\n    font-size: .8em;\n    opacity: .8;\n  }\n`;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faLongArrowAltDown,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { bgColor4 } from 'styles/theme';\nimport { ArrowDown } from 'styles/common';\n\nimport {\n  SkillsWrapper,\n  SkillsTable,\n  SkillsRow,\n  SkillsSection,\n  SkillsContent,\n} from './Skills.styles';\n\nconst Skills = () => {\n  return (\n    <SkillsWrapper className=\"skills\" bgColor={bgColor4}>\n      <h1>Skills</h1>\n      <SkillsTable>\n        <SkillsRow>\n          <SkillsSection>\n            markup\n          </SkillsSection>\n          <SkillsContent>\n            <p>HTML5, CSS3, SCSS/SASS, Responsive Styling</p>\n            <p>various libraries & styling toolkits</p>\n          </SkillsContent>\n        </SkillsRow>\n        <SkillsRow>\n          <SkillsSection>\n            JS & more\n          </SkillsSection>\n          <SkillsContent>\n            <p>ECMAScript 6+, React/Redux, Vue.js/Vuex</p>\n            <p>Node.js, Firebase, GraphQL</p>\n            <p><small>Angular, Typescript</small></p>\n            <p>Chrome Extension Development</p>\n          </SkillsContent>\n        </SkillsRow>\n        <SkillsRow>\n          <SkillsSection>\n            tools\n          </SkillsSection>\n          <SkillsContent>\n            <p>Gulp, Webpack</p>\n            <p>ESLint</p>\n            <p>Git</p>\n          </SkillsContent>\n        </SkillsRow>\n        <SkillsRow>\n          <SkillsSection>\n            unit testing\n          </SkillsSection>\n          <SkillsContent>\n            <p>Jest + Enzyme, Mocha, react-testing-library</p>\n          </SkillsContent>\n        </SkillsRow>\n        <SkillsRow>\n          <SkillsSection>\n            other\n          </SkillsSection>\n          <SkillsContent>\n            <p>Jira (+ other Atlassian products)</p>\n            <p>Photoshop, inVision, Sketch etc.</p>\n          </SkillsContent>\n        </SkillsRow>\n      </SkillsTable>\n      <SkillsTable sub>\n        <SkillsRow>\n          <SkillsSection>\n            languages\n          </SkillsSection>\n          <SkillsContent>\n            <p>Ukrainian, Russian - mother tongues</p>\n            <p>English - fluent</p>\n            <p>Polish - intermediate+</p>\n            <p>German - beginner</p>\n          </SkillsContent>\n        </SkillsRow>\n      </SkillsTable>\n      {/*<ArrowDown side='bottom' text='personal & contacts'>\n        <FontAwesomeIcon icon={faLongArrowAltDown} />\n      </ArrowDown>*/}\n    </SkillsWrapper>\n  );\n}\n\nexport default Skills;\n","import React, { /*useState*/ } from 'react';\n\nimport Landing from 'components/Landing/Landing';\nimport Experience from 'components/Experience/Experience';\nimport Skills from 'components/Skills/Skills';\n//import Personal from 'components/Personal/Personal';\n\nimport './reset.css';\nimport './App.css';\n\n/*const SECTIONS = {\n  LANDING: 'LANDING',\n  EXP: 'EXP',\n  SKILLS: 'SKILLS',\n  PERSONAL: 'PERSONAL',\n}*/\n\nconst App = () => {\n  //const [currentSection, setCurrentSection] = useState(SECTIONS.LANDING);\n\n  return (\n    <div className=\"App\">\n      <Landing />\n      <Experience />\n      <Skills />\n      {/*<Personal />*/}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}